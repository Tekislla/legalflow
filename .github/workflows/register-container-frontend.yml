name: Build and Push Frontend Docker Image to ACR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure Container Registry Login
        run: |
          az acr login --name legalflowfrontend

      - name: Build the Docker image
        run: |
          docker build -t legalflowfrontend.azurecr.io/legalflow-frontend:latest ./frontend/legalflow

      - name: Push the Docker image to ACR
        run: |
          docker push legalflowfrontend.azurecr.io/legalflow-frontend:latest

      - name: Clean up Docker images
        run: |
          docker rmi legalflowfrontend.azurecr.io/legalflow-frontend:latest

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Restart Azure App Service
        run: |
          az webapp restart --name legalflow-frontend --resource-group freetrial

      - name: Get timestamp
        id: get_timestamp
        run: |
          echo "timestamp=$(date --utc +%Y-%m-%dT%H:%M:%S)" >> $GITHUB_ENV

      - name: Monitor logs with retry
        run: |
          for i in {1..60}; do
            echo "Attempt $i to tail logs..."
            LOGS=$(az webapp log tail --name legalflow-frontend --resource-group freetrial --output tsv || echo "Log stream interrupted")
            if [[ "$LOGS" == "Log stream interrupted" ]]; then
              echo "Log stream interrupted, retrying in 10 seconds..."
              sleep 10
            else
              NEW_LOGS=$(echo "$LOGS" | awk -v last_restart="$timestamp" '$0 > last_restart')
              if [[ "$NEW_LOGS" == *"Site started"* ]]; then
                echo "Site started successfully!"
                break
              fi
            fi
            echo "Waiting for the site to start..."
            sleep 10
          done
